HC7T3, qui demande une fonction "compareValues" prenant deux arguments de type "a" et retournant le plus grand. On impose les contraintes que "a" soit une instance de Eq et Ord.

Fonction "compareValues" avec contraintes "Eq" et "Ord"


-- Fonction avec contraintes Eq et Ord
compareValues :: (Eq a, Ord a) => a -> a -> a
compareValues x y
    | x >= y    = x
    | otherwise = y

-- Fonction main pour tester
main :: IO ()
main = do
    print (compareValues 5 10)       -- 10
    print (compareValues "cat" "dog") -- "dog"
    print (compareValues 3.14 2.71)   -- 3.14
  
  Détails techniques

   Eq est nécessaire si tu veux éventuellement comparer pour l’égalité (`==`, `>=` l’utilise).
  Ord permet d’utiliser `>=`, `<`, etc.

  

   Compilation et exécution


ghc Main.hs -o comparevalues && ./comparevalues

